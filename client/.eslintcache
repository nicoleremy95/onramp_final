[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"11","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx":"12","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx":"13"},{"size":362,"mtime":1609988527135,"results":"14","hashOfConfig":"15"},{"size":8178,"mtime":1610318607753,"results":"16","hashOfConfig":"15"},{"size":635,"mtime":1610318672147,"results":"17","hashOfConfig":"15"},{"size":530,"mtime":1610255181000,"results":"18","hashOfConfig":"15"},{"size":20242,"mtime":1610255180998,"results":"19","hashOfConfig":"15"},{"size":1047,"mtime":1610317670656,"results":"20","hashOfConfig":"15"},{"size":6856,"mtime":1610322380218,"results":"21","hashOfConfig":"15"},{"size":2706,"mtime":1610255180998,"results":"22","hashOfConfig":"15"},{"size":1291,"mtime":1610255181000,"results":"23","hashOfConfig":"15"},{"size":347,"mtime":1610317918189,"results":"24","hashOfConfig":"15"},{"size":1679,"mtime":1610255180999,"results":"25","hashOfConfig":"15"},{"size":5105,"mtime":1610318051897,"results":"26","hashOfConfig":"15"},{"size":267,"mtime":1610318154113,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"2irr3u",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["58","59"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",["60"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],["61","62"],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["63"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport './news.css'\n\n//set up interface for props taken from parent component (Home.jsx)\ninterface Props {\n    newsDB: object;\n}\n\ninterface State {\n  message: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: '100px'\n    },\n    cards: {\n      // minWidth: '100px',\n      // maxWidth: '600px',\n      marginTop: '50px',\n      marginBottom: 'auto',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '80%',\n      marginBottom: '20px'\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n  \n            // const newsId = news.data._id\n            // const newsCreator = news.data.newsCreator;\n            // const newsData = news.data.newsData;\n            \n//take props from parent Home.tsx\nexport default function News({newsDB}: Props) : JSX.Element {\n  const [commentObj, setCommentObj] = useState<State>({\n    message:\"\"\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  function inputChange(e: React.ChangeEvent<HTMLTextAreaElement>){\n    //TODO: refactor any\n    const{name,value}: any = e.target;\n    setCommentObj({...commentObj, [name]: value})\n  }\n\n    return (\n      <div \n        className= {classes.root}\n      >\n        <Container>\n          <Grid container>\n            <Grid item xs={1} lg={3}></Grid>\n            <Grid item xs={10} lg={8}>\n              <div className=\"news-bubble\">\n              <div className=\"news-arrow news-bottom left\"></div>\n                <Typography align=\"left\">\n                    <h2 className=\"sup\">more talK!</h2>\n                </Typography>\n                  <Card \n                    className={classes.cards} \n                    variant=\"outlined\"  \n                  >\n                    <CardContent>\n                    <Typography \n                      className=\"News-cards-category\" \n                      color=\"textSecondary\" \n                      gutterBottom>\n                        food\n                    </Typography>\n                    <Typography \n                      variant=\"h5\" \n                      component=\"h2\"\n                    >\n                      Any one else craving tacos???\n                    </Typography>\n                    <Typography \n                      variant=\"body2\" \n                      component=\"p\"\n                    >\n                        Angie\n                    </Typography>\n                    </CardContent>\n                    <CardActions \n                      className={classes.cardAction}\n                    >\n                      <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                      </IconButton>\n                      <IconButton aria-label=\"share\">\n                        <ShareIcon />\n                      </IconButton>\n                      <IconButton aria-label=\"share\">\n                        <EmojiEmotionsIcon onClick={handleOpen} />\n                      </IconButton>\n                      <Modal\n                        aria-labelledby=\"transition-modal-title\"\n                        aria-describedby=\"transition-modal-description\"\n                        className={classes.modal}\n                        open={open}\n                        onClose={handleClose}\n                        closeAfterTransition\n                        BackdropComponent={Backdrop}\n                        BackdropProps={{\n                          timeout: 500,\n                        }}\n                      >\n                      <Fade in={open}>\n                        <div \n                          className={classes.paper}\n                        >\n                          <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                          <Button size=\"small\">üòúÔ∏è</Button>\n                          <Button size=\"small\">üòà</Button>\n                          <Button size=\"small\">üòç</Button>\n                          <Button size=\"small\">üòÇ</Button>\n                          <Button size=\"small\">üòä</Button>\n                        </div>\n                      </Fade>\n                    </Modal>\n                    </CardActions>\n                    <div\n                      className=\"News-cards-comment\"\n                    >\n                      <TextField\n                        id=\"filled-multiline-static\"\n                        label=\"comment\"\n                        variant=\"filled\"\n                        name=\"message\"\n                        value={commentObj.message}\n                        onChange={inputChange}\n                        className={classes.textField}\n                      />\n                    </div>\n                </Card>\n              </div>\n            </Grid>\n            <Grid item xs={1} lg={2}></Grid>\n          </Grid>\n        </Container>\n  {/* {newsArr.map(news =>{return news})} */}\n      </div>\n    )\n}\n\n//loop and render logic \n\n    // const newsArr:object[] = [];\n    // Props.map(item =>{\n    //     console.log('item.newsCreator', item.newsCreator)\n    //     newsArr.push(\n    //         <Card className={classes.root} variant=\"outlined\">\n    //             <CardContent>\n    //             <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n    //                 {item.newsCreator}\n    //             </Typography>\n    //             <Typography variant=\"h5\" component=\"h2\">\n    //                 be{bull}nev{bull}o{bull}lent\n    //             </Typography>\n    //             <Typography variant=\"body2\" component=\"p\">\n    //                 {item.newsData}\n    //                 <br />\n    //                 {'\"a benevolent smile\"'}\n    //             </Typography>\n    //             </CardContent>\n    //             <CardActions>\n    //             <Button size=\"small\">Learn More</Button>\n    //             </CardActions>\n    //         </Card>\n    //     )\n    // })\n    \n        \n    \n//filler news \n  {/* <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n                </Card>\n                  <Card \n                    className={classes.cards} \n                    variant=\"outlined\"  \n                  >\n                      <CardContent>\n                      <Typography \n                        className=\"News-cards-category\" \n                        color=\"textSecondary\" \n                        gutterBottom>\n                          travel\n                      </Typography>\n                      <Typography \n                        variant=\"h5\" \n                        component=\"h2\"\n                      >\n                        I am thinking of going to cuba, any recs?\n                      </Typography>\n                      <Typography \n                        variant=\"body2\" \n                        component=\"p\"\n                      >\n                          fred\n                      </Typography>\n                      </CardContent>\n                      <CardActions className={classes.cardAction}>\n                        <IconButton aria-label=\"add to favorites\">\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <EmojiEmotionsIcon onClick={handleOpen} />\n                        </IconButton>\n                        <Modal\n                          aria-labelledby=\"transition-modal-title\"\n                          aria-describedby=\"transition-modal-description\"\n                          className={classes.modal}\n                          open={open}\n                          onClose={handleClose}\n                          closeAfterTransition\n                          BackdropComponent={Backdrop}\n                          BackdropProps={{\n                            timeout: 500,\n                          }}\n                        >\n                        <Fade in={open}>\n                          <div className={classes.paper}>\n                            <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                            <Button size=\"small\">üòúÔ∏è</Button>\n                            <Button size=\"small\">üòà</Button>\n                            <Button size=\"small\">üòç</Button>\n                            <Button size=\"small\">üòÇ</Button>\n                            <Button size=\"small\">üòä</Button>\n                          </div>\n                        </Fade>\n                      </Modal>\n                      </CardActions>\n                      <div\n                        className=\"News-cards-comment\"\n                      >\n                        <TextField\n                          id=\"filled-multiline-static\"\n                          label=\"comment\"\n                          variant=\"filled\"\n                          className={classes.textField}\n                        />\n                      </div>\n                      \n                </Card> */}","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["64","65","66","67","68","69","70","71","72"],"/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",["73"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    toTop: {\n        zIndex: 2,\n        position: 'fixed',\n        bottom: '2vh',\n        backgroundColor: '#dcdcdc',\n        color: 'black',\n        \"&:hover, &.Mui-focusVisible\": {\n            transition: '0.3s',\n            color: '#397ba6',\n            backgroundColor: '#dcdcdc'\n        },\n        right:'5%'\n    }\n}))\n\nconst Scroll = (showBelow:any) =>{\n    const classes = useStyles();\n    const [show, setShow] = useState(showBelow ? false : true)\n\n    //event handler\n    const handleScroll = () =>{\n        if(window.pageYOffset > showBelow){\n            if(!show) setShow(true)\n        } else {\n            if(show) setShow(false)\n        }\n    }\n\n    //scroll to top of page\n    const handleClick = () =>{\n        window[`scrollTo`]({\n            top:0,\n            behavior: `smooth`\n        })\n    }\n\n    useEffect(()=>{\n        if(showBelow){\n            window.addEventListener(`scroll`, handleScroll)\n            return () => window.removeEventListener(`scroll`, handleScroll)\n        }\n    })\n\n    return(\n        <div>\n            {\n            //show &&\n                <IconButton \n                    onClick={handleClick}\n                    className={classes.toTop}\n                >\n                    <ExpandLessIcon/>\n                </IconButton>\n            }\n        </div>\n    )\n}\n\nexport default Scroll;\n\n","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx",["74","75","76","77","78"],"/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":98,"column":9,"nodeType":"85","messageId":"86","endLine":98,"endColumn":30},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"87","severity":1,"message":"88","line":226,"column":3,"nodeType":"89","messageId":"90","endLine":575,"endColumn":28},{"ruleId":"83","severity":1,"message":"91","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":12},{"ruleId":"83","severity":1,"message":"92","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":18},{"ruleId":"83","severity":1,"message":"93","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":22},{"ruleId":"83","severity":1,"message":"94","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":16},{"ruleId":"83","severity":1,"message":"95","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":18},{"ruleId":"83","severity":1,"message":"96","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":22},{"ruleId":"83","severity":1,"message":"97","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":19},{"ruleId":"83","severity":1,"message":"98","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":14},{"ruleId":"83","severity":1,"message":"99","line":15,"column":8,"nodeType":"85","messageId":"86","endLine":15,"endColumn":20},{"ruleId":"83","severity":1,"message":"100","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":17},{"ruleId":"83","severity":1,"message":"97","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":19},{"ruleId":"83","severity":1,"message":"92","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":18},{"ruleId":"83","severity":1,"message":"94","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":16},{"ruleId":"83","severity":1,"message":"98","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"95","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":18},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-unused-vars","'handleProfileMenuOpen' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Icon' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SendIcon' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]