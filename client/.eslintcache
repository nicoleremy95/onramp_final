[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"11"},{"size":362,"mtime":1609988527135,"results":"12","hashOfConfig":"13"},{"size":6837,"mtime":1610252736819,"results":"14","hashOfConfig":"13"},{"size":515,"mtime":1610251368421,"results":"15","hashOfConfig":"13"},{"size":530,"mtime":1610248735038,"results":"16","hashOfConfig":"13"},{"size":20242,"mtime":1610253141338,"results":"17","hashOfConfig":"13"},{"size":919,"mtime":1610227091255,"results":"18","hashOfConfig":"13"},{"size":6343,"mtime":1610248898063,"results":"19","hashOfConfig":"13"},{"size":2706,"mtime":1610253173512,"results":"20","hashOfConfig":"13"},{"size":1679,"mtime":1610250110479,"results":"21","hashOfConfig":"13"},{"size":1291,"mtime":1610251333841,"results":"22","hashOfConfig":"13"},{"size":290,"mtime":1610252671450,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2irr3u",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["50","51"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",["52"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],["53","54"],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["55"],"/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["56","57","58","59","60"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Container from '@material-ui/core/Container';\nimport API from '../../utils/API';\nimport { Typography } from '@material-ui/core';\nimport './sup.css'\n\ninterface State {\n    newsData: string,\n    newsCreator: string,\n    newsType: string,\n}\n// interface Icon {\n//     icon: boolean\n// }\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    }\n  }),\n);\n\n\nexport default function Sup(){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        newsCreator:\"\",\n        newsType:\"\"\n    })\n\n    const [state, setState] = React.useState<{ age: string | number; name: string }>({\n        age: '',\n        name: 'hai',\n      });\n    \n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n        ...state,\n        [name]: event.target.value,\n    });\n    };\n\n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>){\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) {\n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\",\n            newsCreator: \"\",\n            newsType: \"\"\n        })\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">tell me...suP?</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <IconButton className={classes.send}>\n                                                <SendIcon/>\n                                            </IconButton>\n\n                                        )\n                                    \n                                    }}\n                                />\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={state.age}\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"\" />\n                                        <option value={10}>Travel</option>\n                                        <option value={20}>Food</option>\n                                        <option value={30}>Entertainment</option>\n                                        <option value={30}>Fashion</option>\n                                        <option value={30}>Sports</option>\n                                        <option value={30}>Music</option>\n                                        <option value={30}>Misc</option>\n                                    </Select>\n                                </FormControl>\n                                            \n                        </form>\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",["61"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    toTop: {\n        zIndex: 2,\n        position: 'fixed',\n        bottom: '2vh',\n        backgroundColor: '#dcdcdc',\n        color: 'black',\n        \"&:hover, &.Mui-focusVisible\": {\n            transition: '0.3s',\n            color: '#397ba6',\n            backgroundColor: '#dcdcdc'\n        },\n        right:'5%'\n    }\n}))\n\nconst Scroll = (showBelow:any) =>{\n    const classes = useStyles();\n    const [show, setShow] = useState(showBelow ? false : true)\n\n    //event handler\n    const handleScroll = () =>{\n        if(window.pageYOffset > showBelow){\n            if(!show) setShow(true)\n        } else {\n            if(show) setShow(false)\n        }\n    }\n\n    //scroll to top of page\n    const handleClick = () =>{\n        window[`scrollTo`]({\n            top:0,\n            behavior: `smooth`\n        })\n    }\n\n    useEffect(()=>{\n        if(showBelow){\n            window.addEventListener(`scroll`, handleScroll)\n            return () => window.removeEventListener(`scroll`, handleScroll)\n        }\n    })\n\n    return(\n        <div>\n            {\n            //show &&\n                <IconButton \n                    onClick={handleClick}\n                    className={classes.toTop}\n                >\n                    <ExpandLessIcon/>\n                </IconButton>\n            }\n        </div>\n    )\n}\n\nexport default Scroll;\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":96,"column":9,"nodeType":"68","messageId":"69","endLine":96,"endColumn":30},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"70","severity":1,"message":"71","line":226,"column":3,"nodeType":"72","messageId":"73","endLine":575,"endColumn":28},{"ruleId":"66","severity":1,"message":"74","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":14},{"ruleId":"66","severity":1,"message":"75","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":12},{"ruleId":"66","severity":1,"message":"76","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":22},{"ruleId":"66","severity":1,"message":"77","line":12,"column":8,"nodeType":"68","messageId":"69","endLine":12,"endColumn":22},{"ruleId":"66","severity":1,"message":"78","line":15,"column":8,"nodeType":"68","messageId":"69","endLine":15,"endColumn":20},{"ruleId":"66","severity":1,"message":"79","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":17},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'handleProfileMenuOpen' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Button' is defined but never used.","'Icon' is defined but never used.","'InputAdornment' is defined but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]