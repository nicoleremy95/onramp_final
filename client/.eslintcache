[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"11","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx":"12","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx":"13"},{"size":362,"mtime":1609988527135,"results":"14","hashOfConfig":"15"},{"size":8178,"mtime":1610318607753,"results":"16","hashOfConfig":"15"},{"size":635,"mtime":1610318672147,"results":"17","hashOfConfig":"15"},{"size":530,"mtime":1610255181000,"results":"18","hashOfConfig":"15"},{"size":18629,"mtime":1610338183641,"results":"19","hashOfConfig":"15"},{"size":1047,"mtime":1610317670656,"results":"20","hashOfConfig":"15"},{"size":6811,"mtime":1610324505880,"results":"21","hashOfConfig":"15"},{"size":2706,"mtime":1610255180998,"results":"22","hashOfConfig":"15"},{"size":1870,"mtime":1610332698291,"results":"23","hashOfConfig":"15"},{"size":347,"mtime":1610317918189,"results":"24","hashOfConfig":"15"},{"size":1679,"mtime":1610255180999,"results":"25","hashOfConfig":"15"},{"size":5105,"mtime":1610318051897,"results":"26","hashOfConfig":"15"},{"size":267,"mtime":1610318154113,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"2irr3u",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["61","62"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",["63"],"import * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport './appbar.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appbar: {\n      backgroundColor: '#a5aaab'\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 10,\n      width: '50%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge \n            badgeContent={4} \n            color=\"secondary\"\n            max={999}\n          >\n            <FavoriteIcon />\n          </Badge>\n        </IconButton>\n        <p>Favorites</p>\n      </MenuItem>\n      <MenuItem >\n      \n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <Link to=\"/user\" className=\"Appbar-link-black\">\n         <AccountCircle/>\n         </Link>\n        </IconButton>\n        <p>Profile</p>\n        \n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"login\"\n          aria-controls={menuId}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <Link to=\"/login\" className=\"Appbar-link-black\">\n            <VpnKeyIcon />\n          </Link>\n        </IconButton>\n        <p>Login</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"logout\"\n          aria-controls={menuId}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n            <ExitToAppIcon />\n        </IconButton>\n        <p>Logout</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar \n        position=\"fixed\"\n        className={classes.appbar}\n      >\n        <Toolbar>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Link  to=\"/\" className=\"Appbar-link-white\" ><HomeIcon/></Link>\n            </IconButton>\n          <Typography \n              \n            noWrap\n          >\n            <Link to=\"/\" className=\"Appbar-link-white\"><h3>suP?</h3></Link>\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"find...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <FavoriteIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Link to=\"/user\" className=\"Appbar-link-white\">\n                <AccountCircle />\n              </Link>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"login\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Link to=\"/login\" className=\"Appbar-link-white\">\n                <VpnKeyIcon />\n              </Link>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"logout\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n                <ExitToAppIcon />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n",["64","65"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["66"],"/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["67","68","69","70","71","72","73","74","75"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Container from '@material-ui/core/Container';\nimport API from '../../utils/API';\nimport { Typography } from '@material-ui/core';\nimport './sup.css'\n\ninterface State {\n    newsData: string,\n    // newsCreator: string,\n    // newsType: string,\n}\n// interface Icon {\n//     icon: boolean\n// }\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    }\n  }),\n);\n\n\nexport default function Sup(){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        // newsCreator:\"\",\n        // newsType:\"\"\n    })\n\n    // const [state, setState] = React.useState<{ age: string | number; name: string }>({\n    //     age: '',\n    //     name: 'hai',\n    //   });\n    \n    // const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    // const name = event.target.name as keyof typeof state;\n    // setState({\n    //     ...state,\n    //     [name]: event.target.value,\n    // });\n    // };\n\n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        e.preventDefault();        \n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\"\n            // newsCreator: \"\",\n            // newsType: \"\"\n        })\n        return true;\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onClick={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">tell me...suP?</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    // InputProps={{\n                                    //     endAdornment: (\n                                    //         <IconButton className={classes.send}>\n                                    //             <SendIcon />                                                \n                                    //         </IconButton>\n\n                                    //     )\n                                    \n                                    // }}\n                                />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    send\n                                </Button>\n                                {/* <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={newsObj.newsType}\n                                        name=\"newsType\"\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"none\" />\n                                        <option value=\"Travel\">Travel</option>\n                                        <option value=\"Food\">Food</option>\n                                        <option value=\"Entertainment\">Entertainment</option>\n                                        <option value=\"Fashion\">Fashion</option>\n                                        <option value=\"Sports\">Sports</option>\n                                        <option value=\"Music\">Music</option>\n                                        <option value=\"Misc\">Misc</option>\n                                    </Select>\n                                </FormControl> */}\n                                            \n                        </form>\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",["76"],"import * as React from 'react'\nimport {useState, useEffect} from 'react';\nimport './home.css'\nimport AppBar from '../../components/Appbar/Appbar';\nimport News from '../../components/News/News'\nimport Sup from '../../components/Sup/Sup'\nimport API from '../../utils/API'\nimport Scroll from '../../components/Scroll/Scroll'\nimport Footer from '../../components/Footer/Footer'\nimport './home.css'\n\n// interface newsDef {\n//     //TODO: change type any \n//       newsDB: string,\n  \n// }\n// let myObj = [{size: 10, label: 'hllo' }];\n\n/*function printLabel(labeledObj: ArrayDef) {\n    console.log('labeledObj', labeledObj[0].label);\n}\nprintLabel(myObj);*/\n\n\nexport default function Home() {\n    // const [newsDB, setNewsDB] = useState([]);\n    const [newsDB, setNewsDB] = useState([]);\n    //useState<Array<any>>([]);\n    // const [newsDB, setNewsDB] = useState<newsDef>();\n    // const [newsDB, setNewsDB] = useState<Array<object>>([{}]);\n    console.log(\"FunctionHome\")\n    useEffect(()=>{\n        API.getAllNews()\n        .then(res =>{\n            console.log('res.data[0].newsCreator', res.data[0].newsCreator)\n            console.log('res.data', res.data)\n            setNewsDB(res.data);\n            console.log('newsDB', newsDB)\n        })\n        .catch(err => console.log('err', err))\n    }, [])\n    // const arr:object[] = [];\n    // newsDB.map(item=>{\n    //     console.log('item', item)\n    //     arr.push(\n    //         <h1>{item}</h1>\n    //     )\n    // })\n    \n    return (\n        <div \n            className=\"Home-container\"\n        >\n            <Scroll showBelow={250}/>\n            <AppBar/>\n            <Sup/>\n            {/* <News {...newsDB}/> */}\n            <News newsDB ={newsDB}/>\n            <Footer/>\n            {/* <div> */}\n               {/* {arr.map(news=>{return <h1>{news}</h1>})} */}\n            {/* </div> */}\n        </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",["77"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    toTop: {\n        zIndex: 2,\n        position: 'fixed',\n        bottom: '2vh',\n        backgroundColor: '#dcdcdc',\n        color: 'black',\n        \"&:hover, &.Mui-focusVisible\": {\n            transition: '0.3s',\n            color: '#397ba6',\n            backgroundColor: '#dcdcdc'\n        },\n        right:'5%'\n    }\n}))\n\nconst Scroll = (showBelow:any) =>{\n    const classes = useStyles();\n    const [show, setShow] = useState(showBelow ? false : true)\n\n    //event handler\n    const handleScroll = () =>{\n        if(window.pageYOffset > showBelow){\n            if(!show) setShow(true)\n        } else {\n            if(show) setShow(false)\n        }\n    }\n\n    //scroll to top of page\n    const handleClick = () =>{\n        window[`scrollTo`]({\n            top:0,\n            behavior: `smooth`\n        })\n    }\n\n    useEffect(()=>{\n        if(showBelow){\n            window.addEventListener(`scroll`, handleScroll)\n            return () => window.removeEventListener(`scroll`, handleScroll)\n        }\n    })\n\n    return(\n        <div>\n            {\n            //show &&\n                <IconButton \n                    onClick={handleClick}\n                    className={classes.toTop}\n                >\n                    <ExpandLessIcon/>\n                </IconButton>\n            }\n        </div>\n    )\n}\n\nexport default Scroll;\n\n","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx",["78","79","80","81","82"],"import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from '@material-ui/icons/Send';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport './UserComp.css'\n\ninterface State {\n    username: string,\n    name: string,\n    email: string,\n    password: string \n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    }\n  }),\n);\n\nexport default function UserComp() {\n    const classes = useStyles();\n\n    const [userObj, setUserObj] = useState<State>({\n        username:'',\n        name: '',\n        email: '',\n        password: ''\n    })\n\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>){\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setUserObj({ ...userObj,[name]: value})\n        // setIcon(true)\n    }\n\n    //TODO:\n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) {\n\n    }\n\n    return (\n        <div>\n            <Container>\n                <Grid container>\n                    <Grid item xs={1} md={3} lg={3} direction=\"column\"></Grid>\n                    <Grid item xs ={10} md={6} lg={6}>\n                        <div className=\"user-bubble\">\n                            <div className=\"user-bubble user-bottom right\">\n                            <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">new account</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"username\" \n                                    variant=\"outlined\" \n                                    type=\"textarea\"\n                                    name=\"username\"\n                                    value={userObj.username}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                            \n                                />\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"password\" \n                                    variant=\"outlined\" \n                                    type=\"textarea\"\n                                    name=\"password\"\n                                    value={userObj.password}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    \n                                />\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"name\" \n                                    variant=\"outlined\" \n                                    type=\"textarea\"\n                                    name=\"name\"\n                                    value={userObj.name}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    \n                                />\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"email\" \n                                    variant=\"outlined\"                                     type=\"textarea\"\n                                    name=\"email\"\n                                    value={userObj.email}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                />\n                                            \n                        </form>\n                            </div>\n\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":98,"column":9,"nodeType":"89","messageId":"90","endLine":98,"endColumn":30},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"91","line":118,"column":12,"nodeType":"89","messageId":"90","endLine":118,"endColumn":23},{"ruleId":"87","severity":1,"message":"92","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":12},{"ruleId":"87","severity":1,"message":"93","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":18},{"ruleId":"87","severity":1,"message":"94","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":22},{"ruleId":"87","severity":1,"message":"95","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":16},{"ruleId":"87","severity":1,"message":"96","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":18},{"ruleId":"87","severity":1,"message":"97","line":12,"column":8,"nodeType":"89","messageId":"90","endLine":12,"endColumn":22},{"ruleId":"87","severity":1,"message":"98","line":13,"column":8,"nodeType":"89","messageId":"90","endLine":13,"endColumn":19},{"ruleId":"87","severity":1,"message":"99","line":14,"column":8,"nodeType":"89","messageId":"90","endLine":14,"endColumn":14},{"ruleId":"87","severity":1,"message":"100","line":15,"column":8,"nodeType":"89","messageId":"90","endLine":15,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":41,"column":8,"nodeType":"103","endLine":41,"endColumn":10,"suggestions":"104"},{"ruleId":"87","severity":1,"message":"105","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":17},{"ruleId":"87","severity":1,"message":"98","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":19},{"ruleId":"87","severity":1,"message":"93","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":18},{"ruleId":"87","severity":1,"message":"95","line":10,"column":8,"nodeType":"89","messageId":"90","endLine":10,"endColumn":16},{"ruleId":"87","severity":1,"message":"99","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":14},{"ruleId":"87","severity":1,"message":"96","line":12,"column":8,"nodeType":"89","messageId":"90","endLine":12,"endColumn":18},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'handleProfileMenuOpen' is assigned a value but never used.","Identifier","unusedVar","'inputChange' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SendIcon' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newsDB'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [newsDB]",{"range":"111","text":"112"},[1295,1297],"[newsDB]"]