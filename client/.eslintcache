[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"11","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx":"12","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx":"13","/Users/nicoleremy/code/onramp_final/client/src/components/LoginForm/LoginForm.tsx":"14"},{"size":362,"mtime":1609988527135,"results":"15","hashOfConfig":"16"},{"size":8411,"mtime":1610386224914,"results":"17","hashOfConfig":"16"},{"size":635,"mtime":1610339862138,"results":"18","hashOfConfig":"16"},{"size":530,"mtime":1610255181000,"results":"19","hashOfConfig":"16"},{"size":5560,"mtime":1610384080440,"results":"20","hashOfConfig":"16"},{"size":1529,"mtime":1610385972299,"results":"21","hashOfConfig":"16"},{"size":6454,"mtime":1610384080441,"results":"22","hashOfConfig":"16"},{"size":2706,"mtime":1610255180998,"results":"23","hashOfConfig":"16"},{"size":1870,"mtime":1610339862142,"results":"24","hashOfConfig":"16"},{"size":347,"mtime":1610339862143,"results":"25","hashOfConfig":"16"},{"size":1679,"mtime":1610255180999,"results":"26","hashOfConfig":"16"},{"size":353,"mtime":1610384080443,"results":"27","hashOfConfig":"16"},{"size":4900,"mtime":1610384231193,"results":"28","hashOfConfig":"16"},{"size":4053,"mtime":1610385770107,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2irr3u",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["64","65"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",["66"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],["67","68"],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["69"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport './news.css'\n\ninterface State {\n  message: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 'auto'\n    },\n    cards: {\n      marginTop: '50px',\n      marginBottom: 'auto',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '80%',\n      marginBottom: '20px'\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\n  interface Props {\n    newsDB: any[]\n  }\n\n\nconsole.log (\"Function News running\");\n\nexport default function News({newsDB}: Props) : JSX.Element {\n  // console.log('newsDB', newsDB)\n  const [commentObj, setCommentObj] = useState<State>({\n    message:\"\"\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  function inputChange(e: React.ChangeEvent<HTMLTextAreaElement>){\n    //TODO: refactor any\n    const{name,value}: any = e.target;\n    setCommentObj({...commentObj, [name]: value})\n  }\n\n  const newsArr = [];\n  for(let i = 0; i < newsDB.length; i ++){\n     newsArr.push(\n      <div className=\"news-bubble\">\n      <div className=\"news-arrow news-bottom left\"></div>\n        <Typography align=\"left\">\n            <h2 className=\"sup\">...more talK!</h2>\n        </Typography>\n         <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                {newsDB[i].newsData}\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n         </div>\n     )\n  }\n  \n\n    return (\n      <div \n        className= {classes.root}\n      >\n         <Container>\n           <Grid container>\n             <Grid item xs={1} lg={3}></Grid>\n             <Grid item xs={10} lg={8}>\n              {newsArr.map(news =>{return news})}\n             </Grid>\n             <Grid item xs={1} lg={2}></Grid>\n           </Grid>\n         </Container>\n       </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["70","71","72","73","74","75","76","77","78"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Container from '@material-ui/core/Container';\nimport API from '../../utils/API';\nimport { Typography } from '@material-ui/core';\nimport './sup.css'\n\ninterface State {\n    newsData: string,\n    // newsCreator: string,\n    // newsType: string,\n}\n// interface Icon {\n//     icon: boolean\n// }\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    }\n  }),\n);\n\n\nexport default function Sup(){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        // newsCreator:\"\",\n        // newsType:\"\"\n    })\n\n    // const [state, setState] = React.useState<{ age: string | number; name: string }>({\n    //     age: '',\n    //     name: 'hai',\n    //   });\n    \n    // const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    // const name = event.target.name as keyof typeof state;\n    // setState({\n    //     ...state,\n    //     [name]: event.target.value,\n    // });\n    // };\n\n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        e.preventDefault();        \n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\"\n            // newsCreator: \"\",\n            // newsType: \"\"\n        })\n        return true;\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onClick={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">tell me...suP?</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    // InputProps={{\n                                    //     endAdornment: (\n                                    //         <IconButton className={classes.send}>\n                                    //             <SendIcon />                                                \n                                    //         </IconButton>\n\n                                    //     )\n                                    \n                                    // }}\n                                />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    send\n                                </Button>\n                                {/* <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={newsObj.newsType}\n                                        name=\"newsType\"\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"none\" />\n                                        <option value=\"Travel\">Travel</option>\n                                        <option value=\"Food\">Food</option>\n                                        <option value=\"Entertainment\">Entertainment</option>\n                                        <option value=\"Fashion\">Fashion</option>\n                                        <option value=\"Sports\">Sports</option>\n                                        <option value=\"Music\">Music</option>\n                                        <option value=\"Misc\">Misc</option>\n                                    </Select>\n                                </FormControl> */}\n                                            \n                        </form>\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",["79"],"import * as React from 'react'\nimport {useState, useEffect} from 'react';\nimport './home.css'\nimport AppBar from '../../components/Appbar/Appbar';\nimport News from '../../components/News/News'\nimport Sup from '../../components/Sup/Sup'\nimport API from '../../utils/API'\nimport Scroll from '../../components/Scroll/Scroll'\nimport Footer from '../../components/Footer/Footer'\nimport './home.css'\n\n// interface newsDef {\n//     //TODO: change type any \n//       newsDB: string,\n  \n// }\n// let myObj = [{size: 10, label: 'hllo' }];\n\n/*function printLabel(labeledObj: ArrayDef) {\n    console.log('labeledObj', labeledObj[0].label);\n}\nprintLabel(myObj);*/\n\n\nexport default function Home() {\n    // const [newsDB, setNewsDB] = useState([]);\n    const [newsDB, setNewsDB] = useState([]);\n    //useState<Array<any>>([]);\n    // const [newsDB, setNewsDB] = useState<newsDef>();\n    // const [newsDB, setNewsDB] = useState<Array<object>>([{}]);\n    console.log(\"FunctionHome\")\n    useEffect(()=>{\n        API.getAllNews()\n        .then(res =>{\n            console.log('res.data[0].newsCreator', res.data[0].newsCreator)\n            console.log('res.data', res.data)\n            setNewsDB(res.data);\n            console.log('newsDB', newsDB)\n        })\n        .catch(err => console.log('err', err))\n    }, [])\n    // const arr:object[] = [];\n    // newsDB.map(item=>{\n    //     console.log('item', item)\n    //     arr.push(\n    //         <h1>{item}</h1>\n    //     )\n    // })\n    \n    return (\n        <div \n            className=\"Home-container\"\n        >\n            <Scroll showBelow={250}/>\n            <AppBar/>\n            <Sup/>\n            {/* <News {...newsDB}/> */}\n            <News newsDB ={newsDB}/>\n            <Footer/>\n            {/* <div> */}\n               {/* {arr.map(news=>{return <h1>{news}</h1>})} */}\n            {/* </div> */}\n        </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",["80"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    toTop: {\n        zIndex: 2,\n        position: 'fixed',\n        bottom: '2vh',\n        backgroundColor: '#dcdcdc',\n        color: 'black',\n        \"&:hover, &.Mui-focusVisible\": {\n            transition: '0.3s',\n            color: '#397ba6',\n            backgroundColor: '#dcdcdc'\n        },\n        right:'5%'\n    }\n}))\n\nconst Scroll = (showBelow:any) =>{\n    const classes = useStyles();\n    const [show, setShow] = useState(showBelow ? false : true)\n\n    //event handler\n    const handleScroll = () =>{\n        if(window.pageYOffset > showBelow){\n            if(!show) setShow(true)\n        } else {\n            if(show) setShow(false)\n        }\n    }\n\n    //scroll to top of page\n    const handleClick = () =>{\n        window[`scrollTo`]({\n            top:0,\n            behavior: `smooth`\n        })\n    }\n\n    useEffect(()=>{\n        if(showBelow){\n            window.addEventListener(`scroll`, handleScroll)\n            return () => window.removeEventListener(`scroll`, handleScroll)\n        }\n    })\n\n    return(\n        <div>\n            {\n            //show &&\n                <IconButton \n                    onClick={handleClick}\n                    className={classes.toTop}\n                >\n                    <ExpandLessIcon/>\n                </IconButton>\n            }\n        </div>\n    )\n}\n\nexport default Scroll;\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx",["81","82","83","84","85"],"/Users/nicoleremy/code/onramp_final/client/src/components/LoginForm/LoginForm.tsx",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":103,"column":9,"nodeType":"93","messageId":"94","endLine":103,"endColumn":30},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"95","line":87,"column":12,"nodeType":"93","messageId":"94","endLine":87,"endColumn":23},{"ruleId":"91","severity":1,"message":"96","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":12},{"ruleId":"91","severity":1,"message":"97","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":22},{"ruleId":"91","severity":1,"message":"99","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},{"ruleId":"91","severity":1,"message":"100","line":11,"column":8,"nodeType":"93","messageId":"94","endLine":11,"endColumn":18},{"ruleId":"91","severity":1,"message":"101","line":12,"column":8,"nodeType":"93","messageId":"94","endLine":12,"endColumn":22},{"ruleId":"91","severity":1,"message":"102","line":13,"column":8,"nodeType":"93","messageId":"94","endLine":13,"endColumn":19},{"ruleId":"91","severity":1,"message":"103","line":14,"column":8,"nodeType":"93","messageId":"94","endLine":14,"endColumn":14},{"ruleId":"91","severity":1,"message":"104","line":15,"column":8,"nodeType":"93","messageId":"94","endLine":15,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":41,"column":8,"nodeType":"107","endLine":41,"endColumn":10,"suggestions":"108"},{"ruleId":"91","severity":1,"message":"109","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":17},{"ruleId":"91","severity":1,"message":"102","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":19},{"ruleId":"91","severity":1,"message":"97","line":9,"column":8,"nodeType":"93","messageId":"94","endLine":9,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":10,"column":8,"nodeType":"93","messageId":"94","endLine":10,"endColumn":16},{"ruleId":"91","severity":1,"message":"103","line":11,"column":8,"nodeType":"93","messageId":"94","endLine":11,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":13,"column":8,"nodeType":"93","messageId":"94","endLine":13,"endColumn":18},{"ruleId":"91","severity":1,"message":"110","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":17},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'handleProfileMenuOpen' is assigned a value but never used.","Identifier","unusedVar","'inputChange' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'SendIcon' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newsDB'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'Container' is defined but never used.","'History' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [newsDB]",{"range":"116","text":"117"},[1295,1297],"[newsDB]"]