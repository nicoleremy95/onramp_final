<<<<<<< HEAD
[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"11"},{"size":362,"mtime":1609988527135,"results":"12","hashOfConfig":"13"},{"size":6837,"mtime":1610491077459,"results":"14","hashOfConfig":"13"},{"size":515,"mtime":1610491077458,"results":"15","hashOfConfig":"13"},{"size":530,"mtime":1610255181000,"results":"16","hashOfConfig":"13"},{"size":20242,"mtime":1610491077462,"results":"17","hashOfConfig":"13"},{"size":919,"mtime":1610491077470,"results":"18","hashOfConfig":"13"},{"size":6343,"mtime":1610491077466,"results":"19","hashOfConfig":"13"},{"size":2706,"mtime":1610491077460,"results":"20","hashOfConfig":"13"},{"size":1291,"mtime":1610491077467,"results":"21","hashOfConfig":"13"},{"size":290,"mtime":1610491077469,"results":"22","hashOfConfig":"13"},{"size":1679,"mtime":1610491077464,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2irr3u",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["52","53"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",[],["54","55"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["56","57","58","59","60","61","62","63","64","65","66","67","68"],"import * as React from 'react';\nimport {useState} from 'react';\nimport {createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {Container, Card, CardActions, IconButton, CardContent, Button, Typography, TextField, Backdrop} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport './news.css'\nimport API from '../../utils/API';\n\ninterface State {\n  message: string;\n}\n\n\ninterface Props {\n  newsDB: any[],\n  // currentUserData: object\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 'auto'\n    },\n    cards: {\n      marginTop: '50px',\n      marginBottom: 'auto',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '80%',\n      marginBottom: '20px'\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\n\n// console.log (\"Function News running\");\n\nexport default function News({newsDB}: Props) : JSX.Element {\n  // console.log('News.tsx newsDB.newsData', newsDB.newsData)\n  const classes = useStyles();\n\n  const [commentObj, setCommentObj] = useState<State>({\n    message:\"\"\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const [reactionObj, setReactionObj] = useState<boolean>(false);\n\n  // function favoriteCom(e: React.ChangeEvent<HTMLFormElement>): boolean{\n  //   API.postReaction(reactionObj, newsDB._id)\n  //   return true;\n  // }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function inputChange(e: React.ChangeEvent<HTMLTextAreaElement>){\n    //TODO: refactor any\n    const{name,value}: any = e.target;\n    setCommentObj({...commentObj, [name]: value})\n  }\n\n  const newsArr = [];\n  for(let i = 0; i < newsDB.length; i ++){\n    console.log('newsDB[i].userId', newsDB[i].userId)\n     newsArr.push(\n      <div className=\"news-bubble\">\n      <div className=\"news-arrow news-bottom left\"></div>\n        <Typography align=\"left\">\n            <h2 className=\"news\">...more talK!</h2>\n        </Typography>\n         <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                {newsDB[i].newsData}\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                {newsDB[i].userId.username}\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n         </div>\n     )\n  }\n  \n\n    return (\n      <div \n        className= {classes.root}\n      >\n         <Container>\n           <Grid container>\n             <Grid item xs={1} sm={1} md={3} lg={3}></Grid>\n             <Grid item xs={10} sm={10} md={6} lg={6}>\n              {newsArr.map(news =>{return news})}\n             </Grid>\n             <Grid item xs={1} sm={1} md={2} lg={2}></Grid>\n           </Grid>\n         </Container>\n       </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["69"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {TextField, Button, Grid, Container, Typography, Link} from '@material-ui/core';\nimport API from '../../utils/API';\nimport './sup.css';\n\ninterface State {\n    newsData: string,\n    //TODO: add in newstype in form\n    // newsType: string,\n}\n\ninterface currentUserProps {\n    currentUser: boolean,\n    currentUserData: any\n}\n\ninterface LoginProps {\n    username: string,\n    password: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    },\n    welcome: {\n        fontSize: '30px !important',\n        textAlign: 'right'\n    },\n    moreTalk: {\n        fontSize: '30px !important',\n        textAlign: 'left'\n    }\n  }),\n);\n\n\nexport default function Sup({currentUser, currentUserData}: currentUserProps){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        // newsCreator:\"\",\n        // newsType:\"\"\n    })\n\n    const [loginObj, setLoginObject] = useState<LoginProps>({\n        username:\"\",\n        password:\"\"\n    })\n\n    const history = useHistory();\n\n    //TODO: add in newstype to form\n    // const [state, setState] = React.useState<{ age: string | number; name: string }>({\n    //     age: '',\n    //     name: 'hai',\n    //   });\n    \n    //TODO: add in newstype to form\n    // const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    // const name = event.target.name as keyof typeof state;\n    // setState({\n    //     ...state,\n    //     [name]: event.target.value,\n    // });\n    // };\n\n    function loginInputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setLoginObject({ ...loginObj,[name]: value})\n    }\n\n    //TODO: move to app.tsx and pass down with props \n    function loginInputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        // e.preventDefault();   \n        history.push(\"/\")     \n        API.login(loginObj)\n        .then(loginObj =>{\n            history.push(\"/\")\n            // console.log('loginObj', loginObj)\n        })\n        .catch(err =>console.log('err', err))\n        return true;\n    }\n    //TODO: move to app.tsx and pass down with props \n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    //TODO: move to app.tsx and pass down with props \n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        // e.preventDefault();        \n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\"\n            //TODO: add in newstype to form\n            // newsType: \"\"\n        })\n        return true;\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} sm={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} sm={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        \n                        {currentUser ? \n                            <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">tell me {currentUserData.username}...suP?</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    send\n                                </Button>\n                                {/* TODO: add in newstype to form */}\n                                {/* <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={newsObj.newsType}\n                                        name=\"newsType\"\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"none\" />\n                                        <option value=\"Travel\">Travel</option>\n                                        <option value=\"Food\">Food</option>\n                                        <option value=\"Entertainment\">Entertainment</option>\n                                        <option value=\"Fashion\">Fashion</option>\n                                        <option value=\"Sports\">Sports</option>\n                                        <option value=\"Music\">Music</option>\n                                        <option value=\"Misc\">Misc</option>\n                                    </Select>\n                                </FormControl> */}\n                                            \n                        </form>\n                        : \n                        <Typography><h3 className={classes.welcome}>...Welcome to suP!</h3> <h4 className={classes.moreTalk}> where talk is encouraged...</h4>\n                            <form \n                        // className={classes.root} \n                            noValidate \n                            autoComplete=\"on\" \n                            onSubmit={loginInputSubmit}\n                        >\n                            <Typography align=\"right\">\n                                <h2 className=\"login\">...please login!</h2>\n                            </Typography>\n                            <TextField \n                                id=\"outlined-basic\" \n                                label=\"username\" \n                                variant=\"outlined\" \n                                type=\"textarea\"\n                                name=\"username\"\n                                value={loginObj.username}\n                                onChange={loginInputChange}\n                                className={classes.input}\n                            />\n                            <TextField \n                                id=\"outlined-basic\" \n                                label=\"password\" \n                                variant=\"outlined\" \n                                type=\"password\"\n                                name=\"password\"\n                                value={loginObj.password}\n                                onChange={loginInputChange}\n                                className={classes.input}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                login\n                            </Button>\n                            </form>\n                        </Typography>\n                        }\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} sm={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",["70","71"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '../../components/Appbar/Appbar';\nimport News from '../../components/News/News';\nimport Sup from '../../components/Sup/Sup';\nimport API from '../../utils/API';\nimport Scroll from '../../components/Scroll/Scroll';\nimport Footer from '../../components/Footer/Footer';\n\ninterface currentUserProps {\n    currentUser: boolean\n    currentUserData: any\n}\n\nconst useStyles = makeStyles((theme: Theme)=>\n    createStyles({\n        homeContainer: {\n            backgroundImage: \"linear-gradient(to bottom right, white, #d2a295);\"\n        }\n    })\n)\n\n\n// export default function Home() {\nexport default function Home({currentUser, currentUserData}: currentUserProps) {\n    const classes = useStyles();\n\n    console.log('Home.tsx currentUserData', currentUserData)\n    const [newsDB, setNewsDB] = useState([]);\n    \n    // console.log(\"FunctionHome\")\n    // console.log('home tsx currentUser.username', currentUser.username)\n\n    //TODO: move to app.tsx and pass down with props \n    useEffect(()=>{\n        API.getAllNews()\n        .then(res =>{\n            // console.log('res.data[0].newsCreator', res.data[0].newsCreator)\n            // console.log('res.data', res.data)\n            setNewsDB(res.data);\n            // console.log('newsDB', newsDB)\n        })\n        .catch(err => console.log('err', err))\n    }, [])\n   \n    return (\n        <div \n            className={classes.homeContainer}\n        >\n            <Scroll showBelow={250}/>\n            {/* <AppBar /> */}\n            <AppBar currentUser={currentUser} currentUserData={currentUserData}/>\n            <Sup currentUser={currentUser} currentUserData={currentUserData}/>\n            <News newsDB ={newsDB} />\n            <Footer/>\n        </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",["72","73"],"import * as React from 'react';\nimport Appbar from '../../components/Appbar/Appbar';\nimport Footer from '../../components/Footer/Footer';\nimport UserComp from '../../components/UserComp/UserComp';\n\ninterface currentUserProps {\n    currentUser: boolean,\n    currentUserData: any\n}\n\nexport default function User({currentUser, currentUserData}: currentUserProps) {\n    return (\n        <div>\n            <Appbar currentUser={currentUser} currentUserData={currentUserData}/>\n            <UserComp/>\n            <Footer/>\n        </div>\n    )\n}\n","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":19,"nodeType":"80","messageId":"81","endLine":2,"endColumn":28},{"ruleId":"78","severity":1,"message":"82","line":5,"column":95,"nodeType":"80","messageId":"81","endLine":5,"endColumn":103},{"ruleId":"78","severity":1,"message":"83","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":13},{"ruleId":"78","severity":1,"message":"85","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":12},{"ruleId":"78","severity":1,"message":"86","line":80,"column":10,"nodeType":"80","messageId":"81","endLine":80,"endColumn":14},{"ruleId":"78","severity":1,"message":"87","line":82,"column":10,"nodeType":"80","messageId":"81","endLine":82,"endColumn":21},{"ruleId":"78","severity":1,"message":"88","line":82,"column":23,"nodeType":"80","messageId":"81","endLine":82,"endColumn":37},{"ruleId":"78","severity":1,"message":"89","line":84,"column":10,"nodeType":"80","messageId":"81","endLine":84,"endColumn":20},{"ruleId":"78","severity":1,"message":"90","line":84,"column":22,"nodeType":"80","messageId":"81","endLine":84,"endColumn":35},{"ruleId":"78","severity":1,"message":"91","line":86,"column":9,"nodeType":"80","messageId":"81","endLine":86,"endColumn":16},{"ruleId":"78","severity":1,"message":"92","line":92,"column":9,"nodeType":"80","messageId":"81","endLine":92,"endColumn":19},{"ruleId":"78","severity":1,"message":"93","line":115,"column":9,"nodeType":"80","messageId":"81","endLine":115,"endColumn":20},{"ruleId":"78","severity":1,"message":"94","line":5,"column":9,"nodeType":"80","messageId":"81","endLine":5,"endColumn":25},{"ruleId":"78","severity":1,"message":"95","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":14},{"ruleId":"78","severity":1,"message":"96","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":14},{"ruleId":"78","severity":1,"message":"97","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"96","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Backdrop' is defined but never used.","'ShareIcon' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'open' is assigned a value but never used.","'reactionObj' is assigned a value but never used.","'setReactionObj' is assigned a value but never used.","'inputField' is assigned a value but never used.","'setInputField' is assigned a value but never used.","'history' is assigned a value but never used.","'addCommBtn' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'CircularProgress' is defined but never used.","'AppBar' is defined but never used.","'Footer' is defined but never used.","'Appbar' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"11","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx":"12","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx":"13","/Users/nicoleremy/code/onramp_final/client/src/components/LoginForm/LoginForm.tsx":"14"},{"size":362,"mtime":1609988527135,"results":"15","hashOfConfig":"16"},{"size":9854,"mtime":1610490978530,"results":"17","hashOfConfig":"16"},{"size":1696,"mtime":1610490978529,"results":"18","hashOfConfig":"16"},{"size":530,"mtime":1610255181000,"results":"19","hashOfConfig":"16"},{"size":6962,"mtime":1610490978532,"results":"20","hashOfConfig":"16"},{"size":1611,"mtime":1610490978537,"results":"21","hashOfConfig":"16"},{"size":10005,"mtime":1610490978534,"results":"22","hashOfConfig":"16"},{"size":2699,"mtime":1610420738460,"results":"23","hashOfConfig":"16"},{"size":1767,"mtime":1610490978536,"results":"24","hashOfConfig":"16"},{"size":436,"mtime":1610490978537,"results":"25","hashOfConfig":"16"},{"size":1626,"mtime":1610490978533,"results":"26","hashOfConfig":"16"},{"size":441,"mtime":1610490978537,"results":"27","hashOfConfig":"16"},{"size":4818,"mtime":1610490978535,"results":"28","hashOfConfig":"16"},{"size":3778,"mtime":1610490978532,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2irr3u",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["65","66"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",[],["67","68"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["69","70","71","72","73","74","75","76","77","78","79","80","81"],"import * as React from 'react';\nimport {useState} from 'react';\nimport {createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {Container, Card, CardActions, IconButton, CardContent, Button, Typography, TextField, Backdrop} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport './news.css'\nimport API from '../../utils/API';\n\ninterface State {\n  message: string;\n}\n\n\ninterface Props {\n  newsDB: any[],\n  // currentUserData: object\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 'auto'\n    },\n    cards: {\n      marginTop: '50px',\n      marginBottom: 'auto',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '80%',\n      marginBottom: '20px'\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n\n\n// console.log (\"Function News running\");\n\nexport default function News({newsDB}: Props) : JSX.Element {\n  // console.log('News.tsx newsDB.newsData', newsDB.newsData)\n  const classes = useStyles();\n\n  const [commentObj, setCommentObj] = useState<State>({\n    message:\"\"\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const [reactionObj, setReactionObj] = useState<boolean>(false);\n\n  // function favoriteCom(e: React.ChangeEvent<HTMLFormElement>): boolean{\n  //   API.postReaction(reactionObj, newsDB._id)\n  //   return true;\n  // }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function inputChange(e: React.ChangeEvent<HTMLTextAreaElement>){\n    //TODO: refactor any\n    const{name,value}: any = e.target;\n    setCommentObj({...commentObj, [name]: value})\n  }\n\n  const newsArr = [];\n  for(let i = 0; i < newsDB.length; i ++){\n    console.log('newsDB[i].userId', newsDB[i].userId)\n     newsArr.push(\n      <div className=\"news-bubble\">\n      <div className=\"news-arrow news-bottom left\"></div>\n        <Typography align=\"left\">\n            <h2 className=\"news\">...more talK!</h2>\n        </Typography>\n         <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                {newsDB[i].newsData}\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                {newsDB[i].userId.username}\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">‚ù§Ô∏èÔ∏è</Button>\n                    <Button size=\"small\">üòúÔ∏è</Button>\n                    <Button size=\"small\">üòà</Button>\n                    <Button size=\"small\">üòç</Button>\n                    <Button size=\"small\">üòÇ</Button>\n                    <Button size=\"small\">üòä</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n         </div>\n     )\n  }\n  \n\n    return (\n      <div \n        className= {classes.root}\n      >\n         <Container>\n           <Grid container>\n             <Grid item xs={1} sm={1} md={3} lg={3}></Grid>\n             <Grid item xs={10} sm={10} md={6} lg={6}>\n              {newsArr.map(news =>{return news})}\n             </Grid>\n             <Grid item xs={1} sm={1} md={2} lg={2}></Grid>\n           </Grid>\n         </Container>\n       </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["82"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {TextField, Button, Grid, Container, Typography, Link} from '@material-ui/core';\nimport API from '../../utils/API';\nimport './sup.css';\n\ninterface State {\n    newsData: string,\n    //TODO: add in newstype in form\n    // newsType: string,\n}\n\ninterface currentUserProps {\n    currentUser: boolean,\n    currentUserData: any\n}\n\ninterface LoginProps {\n    username: string,\n    password: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    },\n    welcome: {\n        fontSize: '30px !important',\n        textAlign: 'right'\n    },\n    moreTalk: {\n        fontSize: '30px !important',\n        textAlign: 'left'\n    }\n  }),\n);\n\n\nexport default function Sup({currentUser, currentUserData}: currentUserProps){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        // newsCreator:\"\",\n        // newsType:\"\"\n    })\n\n    const [loginObj, setLoginObject] = useState<LoginProps>({\n        username:\"\",\n        password:\"\"\n    })\n\n    const history = useHistory();\n\n    //TODO: add in newstype to form\n    // const [state, setState] = React.useState<{ age: string | number; name: string }>({\n    //     age: '',\n    //     name: 'hai',\n    //   });\n    \n    //TODO: add in newstype to form\n    // const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    // const name = event.target.name as keyof typeof state;\n    // setState({\n    //     ...state,\n    //     [name]: event.target.value,\n    // });\n    // };\n\n    function loginInputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setLoginObject({ ...loginObj,[name]: value})\n    }\n\n    //TODO: move to app.tsx and pass down with props \n    function loginInputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        // e.preventDefault();   \n        history.push(\"/\")     \n        API.login(loginObj)\n        .then(loginObj =>{\n            history.push(\"/\")\n            // console.log('loginObj', loginObj)\n        })\n        .catch(err =>console.log('err', err))\n        return true;\n    }\n    //TODO: move to app.tsx and pass down with props \n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    //TODO: move to app.tsx and pass down with props \n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        // e.preventDefault();        \n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\"\n            //TODO: add in newstype to form\n            // newsType: \"\"\n        })\n        return true;\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} sm={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} sm={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        \n                        {currentUser ? \n                            <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">tell me {currentUserData.username}...suP?</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    send\n                                </Button>\n                                {/* TODO: add in newstype to form */}\n                                {/* <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={newsObj.newsType}\n                                        name=\"newsType\"\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"none\" />\n                                        <option value=\"Travel\">Travel</option>\n                                        <option value=\"Food\">Food</option>\n                                        <option value=\"Entertainment\">Entertainment</option>\n                                        <option value=\"Fashion\">Fashion</option>\n                                        <option value=\"Sports\">Sports</option>\n                                        <option value=\"Music\">Music</option>\n                                        <option value=\"Misc\">Misc</option>\n                                    </Select>\n                                </FormControl> */}\n                                            \n                        </form>\n                        : \n                        <Typography><h3 className={classes.welcome}>...Welcome to suP!</h3> <h4 className={classes.moreTalk}> where talk is encouraged...</h4>\n                            <form \n                        // className={classes.root} \n                            noValidate \n                            autoComplete=\"on\" \n                            onSubmit={loginInputSubmit}\n                        >\n                            <Typography align=\"right\">\n                                <h2 className=\"login\">...please login!</h2>\n                            </Typography>\n                            <TextField \n                                id=\"outlined-basic\" \n                                label=\"username\" \n                                variant=\"outlined\" \n                                type=\"textarea\"\n                                name=\"username\"\n                                value={loginObj.username}\n                                onChange={loginInputChange}\n                                className={classes.input}\n                            />\n                            <TextField \n                                id=\"outlined-basic\" \n                                label=\"password\" \n                                variant=\"outlined\" \n                                type=\"password\"\n                                name=\"password\"\n                                value={loginObj.password}\n                                onChange={loginInputChange}\n                                className={classes.input}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                login\n                            </Button>\n                            </form>\n                        </Typography>\n                        }\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} sm={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",["83","84"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '../../components/Appbar/Appbar';\nimport News from '../../components/News/News';\nimport Sup from '../../components/Sup/Sup';\nimport API from '../../utils/API';\nimport Scroll from '../../components/Scroll/Scroll';\nimport Footer from '../../components/Footer/Footer';\n\ninterface currentUserProps {\n    currentUser: boolean\n    currentUserData: any\n}\n\nconst useStyles = makeStyles((theme: Theme)=>\n    createStyles({\n        homeContainer: {\n            backgroundImage: \"linear-gradient(to bottom right, white, #d2a295);\"\n        }\n    })\n)\n\n\n// export default function Home() {\nexport default function Home({currentUser, currentUserData}: currentUserProps) {\n    const classes = useStyles();\n\n    console.log('Home.tsx currentUserData', currentUserData)\n    const [newsDB, setNewsDB] = useState([]);\n    \n    // console.log(\"FunctionHome\")\n    // console.log('home tsx currentUser.username', currentUser.username)\n\n    //TODO: move to app.tsx and pass down with props \n    useEffect(()=>{\n        API.getAllNews()\n        .then(res =>{\n            // console.log('res.data[0].newsCreator', res.data[0].newsCreator)\n            // console.log('res.data', res.data)\n            setNewsDB(res.data);\n            // console.log('newsDB', newsDB)\n        })\n        .catch(err => console.log('err', err))\n    }, [])\n   \n    return (\n        <div \n            className={classes.homeContainer}\n        >\n            <Scroll showBelow={250}/>\n            {/* <AppBar /> */}\n            <AppBar currentUser={currentUser} currentUserData={currentUserData}/>\n            <Sup currentUser={currentUser} currentUserData={currentUserData}/>\n            <News newsDB ={newsDB} />\n            <Footer/>\n        </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",["85","86"],"import * as React from 'react';\nimport Appbar from '../../components/Appbar/Appbar';\nimport Footer from '../../components/Footer/Footer';\nimport UserComp from '../../components/UserComp/UserComp';\n\ninterface currentUserProps {\n    currentUser: boolean,\n    currentUserData: any\n}\n\nexport default function User({currentUser, currentUserData}: currentUserProps) {\n    return (\n        <div>\n            <Appbar currentUser={currentUser} currentUserData={currentUserData}/>\n            <UserComp/>\n            <Footer/>\n        </div>\n    )\n}\n","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx",["87","88"],"import * as React from 'react';\nimport Appbar from '../../components/Appbar/Appbar';\nimport Footer from '../../components/Footer/Footer';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\ninterface currentUserProps {\n    currentUser: boolean,\n    currentUserData: any\n}\n\nexport default function Login({currentUser, currentUserData}: currentUserProps) {\n    return (\n        <div>\n            <Appbar currentUser={currentUser} currentUserData={currentUserData}/>\n            <LoginForm/>\n            <Footer/>\n        </div>\n    )\n}\n","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/LoginForm/LoginForm.tsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":19,"nodeType":"95","messageId":"96","endLine":2,"endColumn":28},{"ruleId":"93","severity":1,"message":"97","line":5,"column":95,"nodeType":"95","messageId":"96","endLine":5,"endColumn":103},{"ruleId":"93","severity":1,"message":"98","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":13},{"ruleId":"93","severity":1,"message":"100","line":10,"column":8,"nodeType":"95","messageId":"96","endLine":10,"endColumn":12},{"ruleId":"93","severity":1,"message":"101","line":80,"column":10,"nodeType":"95","messageId":"96","endLine":80,"endColumn":14},{"ruleId":"93","severity":1,"message":"102","line":82,"column":10,"nodeType":"95","messageId":"96","endLine":82,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":82,"column":23,"nodeType":"95","messageId":"96","endLine":82,"endColumn":37},{"ruleId":"93","severity":1,"message":"104","line":84,"column":10,"nodeType":"95","messageId":"96","endLine":84,"endColumn":20},{"ruleId":"93","severity":1,"message":"105","line":84,"column":22,"nodeType":"95","messageId":"96","endLine":84,"endColumn":35},{"ruleId":"93","severity":1,"message":"106","line":86,"column":9,"nodeType":"95","messageId":"96","endLine":86,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":92,"column":9,"nodeType":"95","messageId":"96","endLine":92,"endColumn":19},{"ruleId":"93","severity":1,"message":"108","line":115,"column":9,"nodeType":"95","messageId":"96","endLine":115,"endColumn":20},{"ruleId":"93","severity":1,"message":"109","line":5,"column":9,"nodeType":"95","messageId":"96","endLine":5,"endColumn":25},{"ruleId":"93","severity":1,"message":"110","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"111","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":14},{"ruleId":"93","severity":1,"message":"112","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"111","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"112","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"111","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Backdrop' is defined but never used.","'ShareIcon' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'open' is assigned a value but never used.","'reactionObj' is assigned a value but never used.","'setReactionObj' is assigned a value but never used.","'inputField' is assigned a value but never used.","'setInputField' is assigned a value but never used.","'history' is assigned a value but never used.","'addCommBtn' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'CircularProgress' is defined but never used.","'AppBar' is defined but never used.","'Footer' is defined but never used.","'Appbar' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> main
