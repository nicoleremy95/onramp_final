[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/pages/Home.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"10"},{"size":362,"mtime":1609988527135,"results":"11","hashOfConfig":"12"},{"size":6637,"mtime":1610227091249,"results":"13","hashOfConfig":"12"},{"size":1226,"mtime":1610248689171,"results":"14","hashOfConfig":"12"},{"size":395,"mtime":1610227091248,"results":"15","hashOfConfig":"12"},{"size":509,"mtime":1610248689169,"results":"16","hashOfConfig":"12"},{"size":19002,"mtime":1610248689161,"results":"17","hashOfConfig":"12"},{"size":919,"mtime":1610227091255,"results":"18","hashOfConfig":"12"},{"size":3521,"mtime":1610248689165,"results":"19","hashOfConfig":"12"},{"size":2663,"mtime":1610248689159,"results":"20","hashOfConfig":"12"},{"size":1626,"mtime":1610227091251,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2irr3u",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["47","48"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",[],["49","50"],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home.tsx",["51"],"import * as React from 'react'\nimport {useState, useEffect} from 'react';\nimport './home.css'\nimport AppBar from '../components/Appbar/Appbar';\nimport News from '../components/News/News'\nimport Sup from '../components/Sup/Sup'\nimport API from '../utils/API'\nimport Scroll from '../components/Scroll/Scroll'\nimport Footer from '../components/Footer/Footer'\nimport './home.css'\n\nexport default function Home() {\n    const [newsDB, setNewsDB] = useState<Array<object>>([]);\n\n    useEffect(()=>{\n        API.getAllNews()\n        .then(res =>{\n            const newsArr = res.data;\n            console.log('newsData', res.data)\n            setNewsDB(newsArr);\n        })\n        .catch(err => console.log('err', err))\n    }\n    // , [newsDB]\n    )\n    // const arr:object[] = [];\n    // newsDB.map(item=>{\n    //     console.log('item', item)\n    //     arr.push(\n    //         <h1>{item}</h1>\n    //     )\n    // })\n    \n    return (\n        <div className=\"Home\">\n            <Scroll showBelow={250}/>\n            <AppBar/>\n            <Sup/>\n            <News newsDB={newsDB} />\n            <Footer/>\n            <div>\n               {/* {arr.map(news=>{return <h1>{news}</h1>})} */}\n            </div>\n        </div>\n    )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["52"],"import * as React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport './news.css'\n\n//set up interface for props taken from parent component (Home.jsx)\ninterface Props {\n    newsDB: object;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '10px',\n      margin:'auto'\n    },\n    cards: {\n      minWidth: '100px',\n      maxWidth: '600px',\n      marginTop: '50px',\n      marginBottom: '50px',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '80%',\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n  \n            // const newsId = news.data._id\n            // const newsCreator = news.data.newsCreator;\n            // const newsData = news.data.newsData;\n            \n//take props from parent Home.tsx\nexport default function News({newsDB}: Props) : JSX.Element {\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n    const classes = useStyles();\n\n    // const newsArr:object[] = [];\n    // Props.map(item =>{\n    //     console.log('item.newsCreator', item.newsCreator)\n    //     newsArr.push(\n    //         <Card className={classes.root} variant=\"outlined\">\n    //             <CardContent>\n    //             <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n    //                 {item.newsCreator}\n    //             </Typography>\n    //             <Typography variant=\"h5\" component=\"h2\">\n    //                 be{bull}nev{bull}o{bull}lent\n    //             </Typography>\n    //             <Typography variant=\"body2\" component=\"p\">\n    //                 {item.newsData}\n    //                 <br />\n    //                 {'\"a benevolent smile\"'}\n    //             </Typography>\n    //             </CardContent>\n    //             <CardActions>\n    //             <Button size=\"small\">Learn More</Button>\n    //             </CardActions>\n    //         </Card>\n    //     )\n    // })\n    \n        \n    \n    return (\n        <div \n          className= {classes.root}\n        >\n          <Container>\n            <Grid container>\n              <Grid item xs={1} lg={3}></Grid>\n              <Grid item xs={10} lg={8}>\n              <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  food\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                Any one else craving tacos???\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  Angie\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n                </Card>\n                  <Card \n                    className={classes.cards} \n                    variant=\"outlined\"  \n                  >\n                      <CardContent>\n                      <Typography \n                        className=\"News-cards-category\" \n                        color=\"textSecondary\" \n                        gutterBottom>\n                          travel\n                      </Typography>\n                      <Typography \n                        variant=\"h5\" \n                        component=\"h2\"\n                      >\n                        I am thinking of going to cuba, any recs?\n                      </Typography>\n                      <Typography \n                        variant=\"body2\" \n                        component=\"p\"\n                      >\n                          fred\n                      </Typography>\n                      </CardContent>\n                      <CardActions className={classes.cardAction}>\n                        <IconButton aria-label=\"add to favorites\">\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <EmojiEmotionsIcon onClick={handleOpen} />\n                        </IconButton>\n                        <Modal\n                          aria-labelledby=\"transition-modal-title\"\n                          aria-describedby=\"transition-modal-description\"\n                          className={classes.modal}\n                          open={open}\n                          onClose={handleClose}\n                          closeAfterTransition\n                          BackdropComponent={Backdrop}\n                          BackdropProps={{\n                            timeout: 500,\n                          }}\n                        >\n                        <Fade in={open}>\n                          <div className={classes.paper}>\n                            <Button size=\"small\">❤️️</Button>\n                            <Button size=\"small\">😜️</Button>\n                            <Button size=\"small\">😈</Button>\n                            <Button size=\"small\">😍</Button>\n                            <Button size=\"small\">😂</Button>\n                            <Button size=\"small\">😊</Button>\n                          </div>\n                        </Fade>\n                      </Modal>\n                      </CardActions>\n                      <div\n                        className=\"News-cards-comment\"\n                      >\n                        <TextField\n                          id=\"filled-multiline-static\"\n                          label=\"comment\"\n                          variant=\"filled\"\n                          className={classes.textField}\n                        />\n                      </div>\n                      \n                </Card>\n              </Grid>\n              <Grid item xs={1} lg={2}></Grid>\n            </Grid>\n          </Container>\n           {/* {newsArr.map(news =>{return news})} */}\n          \n        </div>\n    )\n}\n","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["53","54","55","56","57"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport API from '../../utils/API';\nimport './sup.css'\n\ninterface State {\n    newsData: string,\n    newsCreator: string,\n    newsType: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n        marginTop: '100px'\n      },\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n  }),\n);\n\n\nexport default function Sup(){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData: \"\",\n        newsCreator: \"\",\n        newsType: \"\"\n    })\n\n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>){\n        //TODO: refactor any\n        const{name, value}: any = e.target;\n        setNewsObj({ ...newsObj, [name]: value })\n    }\n\n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) {\n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\",\n            newsCreator: \"\",\n            newsType: \"\"\n        })\n    }\n    return(\n        <div className={classes.container}>\n            <form className={classes.root} noValidate autoComplete=\"on\" onSubmit={inputSubmit}>\n                <div>\n                    <TextField \n                        id=\"outlined-basic\" \n                        label=\"suP friend?\" \n                        variant=\"outlined\" \n                        multiline\n                        rows={4}\n                        type=\"textarea\"\n                        onChange={inputChange}\n                        value={newsObj.newsData}\n                        className={classes.input}\n                    />\n                    <TextField \n                        id=\"outlined-basic\" \n                        label=\"name\" \n                        variant=\"outlined\" \n                        rows={4}\n                        required= {true}\n                        type=\"textarea\"\n                        onChange={inputChange}\n                        value={newsObj.newsCreator}\n                        className={classes.input}\n                    />\n                    <TextField \n                        id=\"outlined-basic\" \n                        label=\"type\" \n                        variant=\"outlined\" \n                        rows={4}\n                        type=\"textarea\"\n                        onChange={inputChange}\n                        value={newsObj.newsType}\n                        className={classes.input}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                    >\n                        Send\n                    </Button>\n                </div>\n            </form>\n        </div>\n    )\n}","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":226,"column":3,"nodeType":"68","messageId":"69","endLine":575,"endColumn":28},{"ruleId":"62","severity":1,"message":"70","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":14},{"ruleId":"62","severity":1,"message":"71","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":12},{"ruleId":"62","severity":1,"message":"72","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":22},{"ruleId":"62","severity":1,"message":"73","line":12,"column":8,"nodeType":"64","messageId":"65","endLine":12,"endColumn":22},{"ruleId":"62","severity":1,"message":"74","line":15,"column":8,"nodeType":"64","messageId":"65","endLine":15,"endColumn":20},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Button' is defined but never used.","'Icon' is defined but never used.","'InputAdornment' is defined but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","no-global-assign","no-unsafe-negation"]