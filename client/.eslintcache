[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home.tsx":"9"},{"size":362,"mtime":1609988527135,"results":"10","hashOfConfig":"11"},{"size":7220,"mtime":1610255058349,"results":"12","hashOfConfig":"11"},{"size":438,"mtime":1610255058347,"results":"13","hashOfConfig":"11"},{"size":509,"mtime":1610255058356,"results":"14","hashOfConfig":"11"},{"size":2243,"mtime":1610255058352,"results":"15","hashOfConfig":"11"},{"size":895,"mtime":1610255058358,"results":"16","hashOfConfig":"11"},{"size":3032,"mtime":1610255058353,"results":"17","hashOfConfig":"11"},{"size":100,"mtime":1610255058351,"results":"18","hashOfConfig":"11"},{"size":1045,"mtime":1610255058357,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2irr3u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["43","44"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",["45"],"import * as React from 'react';\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport './appbar.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appbar: {\n      backgroundColor: '#a5aaab'\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 10,\n      width: '50%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge \n            badgeContent={4} \n            color=\"secondary\"\n            max={999}\n          >\n            <FavoriteIcon />\n          </Badge>\n        </IconButton>\n        <p>Favorites</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar \n        position=\"fixed\"\n        className={classes.appbar}\n      >\n        <Toolbar>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <HomeIcon />\n            </IconButton>\n          <Typography \n            className=\"AppBar-title\" \n            variant=\"h6\" \n            noWrap\n          >\n            suP?\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"find...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <FavoriteIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n",["46","47"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["48"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport './news.css'\n\n//set up interface for props taken from parent component (Home.jsx)\ninterface Props {\n    newsDB: object;\n}\n\ninterface State {\n  message: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: '100px'\n    },\n    cards: {\n      // minWidth: '100px',\n      // maxWidth: '600px',\n      marginTop: '50px',\n      marginBottom: 'auto',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '80%',\n      marginBottom: '20px'\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  })\n);\n  \n            // const newsId = news.data._id\n            // const newsCreator = news.data.newsCreator;\n            // const newsData = news.data.newsData;\n            \n//take props from parent Home.tsx\nexport default function News({newsDB}: Props) : JSX.Element {\n  const [commentObj, setCommentObj] = useState<State>({\n    message:\"\"\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  function inputChange(e: React.ChangeEvent<HTMLTextAreaElement>){\n    //TODO: refactor any\n    const{name,value}: any = e.target;\n    setCommentObj({...commentObj, [name]: value})\n  }\n\n    return (\n      <div \n        className= {classes.root}\n      >\n        <Container>\n          <Grid container>\n            <Grid item xs={1} lg={3}></Grid>\n            <Grid item xs={10} lg={8}>\n              <div className=\"news-bubble\">\n              <div className=\"news-arrow news-bottom left\"></div>\n                <Typography align=\"left\">\n                    <h2 className=\"sup\">more talK!</h2>\n                </Typography>\n                  <Card \n                    className={classes.cards} \n                    variant=\"outlined\"  \n                  >\n                    <CardContent>\n                    <Typography \n                      className=\"News-cards-category\" \n                      color=\"textSecondary\" \n                      gutterBottom>\n                        food\n                    </Typography>\n                    <Typography \n                      variant=\"h5\" \n                      component=\"h2\"\n                    >\n                      Any one else craving tacos???\n                    </Typography>\n                    <Typography \n                      variant=\"body2\" \n                      component=\"p\"\n                    >\n                        Angie\n                    </Typography>\n                    </CardContent>\n                    <CardActions \n                      className={classes.cardAction}\n                    >\n                      <IconButton aria-label=\"add to favorites\">\n                        <FavoriteIcon />\n                      </IconButton>\n                      <IconButton aria-label=\"share\">\n                        <ShareIcon />\n                      </IconButton>\n                      <IconButton aria-label=\"share\">\n                        <EmojiEmotionsIcon onClick={handleOpen} />\n                      </IconButton>\n                      <Modal\n                        aria-labelledby=\"transition-modal-title\"\n                        aria-describedby=\"transition-modal-description\"\n                        className={classes.modal}\n                        open={open}\n                        onClose={handleClose}\n                        closeAfterTransition\n                        BackdropComponent={Backdrop}\n                        BackdropProps={{\n                          timeout: 500,\n                        }}\n                      >\n                      <Fade in={open}>\n                        <div \n                          className={classes.paper}\n                        >\n                          <Button size=\"small\">❤️️</Button>\n                          <Button size=\"small\">😜️</Button>\n                          <Button size=\"small\">😈</Button>\n                          <Button size=\"small\">😍</Button>\n                          <Button size=\"small\">😂</Button>\n                          <Button size=\"small\">😊</Button>\n                        </div>\n                      </Fade>\n                    </Modal>\n                    </CardActions>\n                    <div\n                      className=\"News-cards-comment\"\n                    >\n                      <TextField\n                        id=\"filled-multiline-static\"\n                        label=\"comment\"\n                        variant=\"filled\"\n                        name=\"message\"\n                        value={commentObj.message}\n                        onChange={inputChange}\n                        className={classes.textField}\n                      />\n                    </div>\n                </Card>\n              </div>\n            </Grid>\n            <Grid item xs={1} lg={2}></Grid>\n          </Grid>\n        </Container>\n  {/* {newsArr.map(news =>{return news})} */}\n      </div>\n    )\n}\n\n//loop and render logic \n\n    // const newsArr:object[] = [];\n    // Props.map(item =>{\n    //     console.log('item.newsCreator', item.newsCreator)\n    //     newsArr.push(\n    //         <Card className={classes.root} variant=\"outlined\">\n    //             <CardContent>\n    //             <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n    //                 {item.newsCreator}\n    //             </Typography>\n    //             <Typography variant=\"h5\" component=\"h2\">\n    //                 be{bull}nev{bull}o{bull}lent\n    //             </Typography>\n    //             <Typography variant=\"body2\" component=\"p\">\n    //                 {item.newsData}\n    //                 <br />\n    //                 {'\"a benevolent smile\"'}\n    //             </Typography>\n    //             </CardContent>\n    //             <CardActions>\n    //             <Button size=\"small\">Learn More</Button>\n    //             </CardActions>\n    //         </Card>\n    //     )\n    // })\n    \n        \n    \n//filler news \n  {/* <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n         </Card>\n          <Card \n            className={classes.cards} \n            variant=\"outlined\"  \n          >\n              <CardContent>\n              <Typography \n                className=\"News-cards-category\" \n                color=\"textSecondary\" \n                gutterBottom>\n                  travel\n              </Typography>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                I am thinking of going to cuba, any recs?\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                  fred\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n                <Modal\n                  aria-labelledby=\"transition-modal-title\"\n                  aria-describedby=\"transition-modal-description\"\n                  className={classes.modal}\n                  open={open}\n                  onClose={handleClose}\n                  closeAfterTransition\n                  BackdropComponent={Backdrop}\n                  BackdropProps={{\n                    timeout: 500,\n                  }}\n                >\n                <Fade in={open}>\n                  <div className={classes.paper}>\n                    <Button size=\"small\">❤️️</Button>\n                    <Button size=\"small\">😜️</Button>\n                    <Button size=\"small\">😈</Button>\n                    <Button size=\"small\">😍</Button>\n                    <Button size=\"small\">😂</Button>\n                    <Button size=\"small\">😊</Button>\n                  </div>\n                </Fade>\n              </Modal>\n              </CardActions>\n              <div\n                className=\"News-cards-comment\"\n              >\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  variant=\"filled\"\n                  className={classes.textField}\n                />\n              </div>\n              \n                </Card>\n                  <Card \n                    className={classes.cards} \n                    variant=\"outlined\"  \n                  >\n                      <CardContent>\n                      <Typography \n                        className=\"News-cards-category\" \n                        color=\"textSecondary\" \n                        gutterBottom>\n                          travel\n                      </Typography>\n                      <Typography \n                        variant=\"h5\" \n                        component=\"h2\"\n                      >\n                        I am thinking of going to cuba, any recs?\n                      </Typography>\n                      <Typography \n                        variant=\"body2\" \n                        component=\"p\"\n                      >\n                          fred\n                      </Typography>\n                      </CardContent>\n                      <CardActions className={classes.cardAction}>\n                        <IconButton aria-label=\"add to favorites\">\n                          <FavoriteIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <ShareIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"share\">\n                          <EmojiEmotionsIcon onClick={handleOpen} />\n                        </IconButton>\n                        <Modal\n                          aria-labelledby=\"transition-modal-title\"\n                          aria-describedby=\"transition-modal-description\"\n                          className={classes.modal}\n                          open={open}\n                          onClose={handleClose}\n                          closeAfterTransition\n                          BackdropComponent={Backdrop}\n                          BackdropProps={{\n                            timeout: 500,\n                          }}\n                        >\n                        <Fade in={open}>\n                          <div className={classes.paper}>\n                            <Button size=\"small\">❤️️</Button>\n                            <Button size=\"small\">😜️</Button>\n                            <Button size=\"small\">😈</Button>\n                            <Button size=\"small\">😍</Button>\n                            <Button size=\"small\">😂</Button>\n                            <Button size=\"small\">😊</Button>\n                          </div>\n                        </Fade>\n                      </Modal>\n                      </CardActions>\n                      <div\n                        className=\"News-cards-comment\"\n                      >\n                        <TextField\n                          id=\"filled-multiline-static\"\n                          label=\"comment\"\n                          variant=\"filled\"\n                          className={classes.textField}\n                        />\n                      </div>\n                      \n                </Card> */}","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["49","50","51","52","53"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Container from '@material-ui/core/Container';\nimport API from '../../utils/API';\nimport { Typography } from '@material-ui/core';\nimport './sup.css'\n\ninterface State {\n    newsData: string,\n    newsCreator: string,\n    newsType: string,\n}\n// interface Icon {\n//     icon: boolean\n// }\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        // display: 'flex',\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    }\n  }),\n);\n\n\nexport default function Sup(){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        newsCreator:\"\",\n        newsType:\"\"\n    })\n\n    const [state, setState] = React.useState<{ age: string | number; name: string }>({\n        age: '',\n        name: 'hai',\n      });\n    \n    const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    const name = event.target.name as keyof typeof state;\n    setState({\n        ...state,\n        [name]: event.target.value,\n    });\n    };\n\n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>){\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) {\n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\",\n            newsCreator: \"\",\n            newsType: \"\"\n        })\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        <form \n                            // className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={inputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"sup\">tell me...suP?</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <IconButton className={classes.send}>\n                                                <SendIcon/>\n                                            </IconButton>\n\n                                        )\n                                    \n                                    }}\n                                />\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={state.age}\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"\" />\n                                        <option value={10}>Travel</option>\n                                        <option value={20}>Food</option>\n                                        <option value={30}>Entertainment</option>\n                                        <option value={30}>Fashion</option>\n                                        <option value={30}>Sports</option>\n                                        <option value={30}>Music</option>\n                                        <option value={30}>Misc</option>\n                                    </Select>\n                                </FormControl>\n                                            \n                        </form>\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home.tsx",["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":96,"column":9,"nodeType":"62","messageId":"63","endLine":96,"endColumn":30},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"64","severity":1,"message":"65","line":226,"column":3,"nodeType":"66","messageId":"67","endLine":575,"endColumn":28},{"ruleId":"60","severity":1,"message":"68","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":14},{"ruleId":"60","severity":1,"message":"69","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":12},{"ruleId":"60","severity":1,"message":"70","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":22},{"ruleId":"60","severity":1,"message":"71","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":22},{"ruleId":"60","severity":1,"message":"72","line":15,"column":8,"nodeType":"62","messageId":"63","endLine":15,"endColumn":20},{"ruleId":"60","severity":1,"message":"73","line":3,"column":9,"nodeType":"62","messageId":"63","endLine":3,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":25,"column":20,"nodeType":"76","messageId":"77","endLine":25,"endColumn":22},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'handleProfileMenuOpen' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Button' is defined but never used.","'Icon' is defined but never used.","'InputAdornment' is defined but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'useParams' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]